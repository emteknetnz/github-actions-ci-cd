# Runs on the github-actions-ci-cd module to automatically delete and re-release tags
# Such as 2, 2.5 when 2.5.0 is released as ^ requirements are not supposed e.g. # @^2 won't work

on:
  push:
    tags:
      - '*.*.*'

jobs:
  context:
    name: Context
    runs-on: ubuntu-latest
    steps:
      - name: Context
        run: |
          # https://docs.github.com/en/actions/learn-github-actions/contexts#context-availability
          echo "github.base_ref: ${{ github.base_ref }}"
          echo "github.event_name: ${{ github.event_name }}"
          echo "github.head_ref: ${{ github.head_ref }}"
          echo "github.ref: ${{ github.ref }}"
          echo "github.ref_name: ${{ github.ref_name }}"
          echo "github.ref_type: ${{ github.ref_type }}"
          echo "github.repository: ${{ github.repository }}"
          echo "github.sha: ${{ github.sha }}"
          echo "job.status: ${{ job.status }}"
          # https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows
          echo "github.event.issue.pull_request: ${{ github.event.issue.pull_request }}"
          echo "github.event.issue.number: ${{ github.event.issue.number }}"
          echo "github.event.repository.name: ${{ github.event.repository.name }}"

  action-tag:
    name: Action tag
    runs-on: ubuntu-latest
    steps:
      - name: Action tag
        run: |
          # refs/tags/0.1.23 => 0.1.23
          TAG=$(echo ${{ github.ref }} | cut -c 11-)
          if [[ $TAG =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            MAJOR="${BASH_REMATCH[1]}"
            MINOR="${BASH_REMATCH[2]}"
            PATCH="${BASH_REMATCH[3]}"
            NEW_TAGS=("$MAJOR" "$MAJOR.$MINOR")
            if [ "$MAJOR" == "0" ]; then
              NEW_TAGS=("$MAJOR.$MINOR")
            fi
            echo "NEW_TAGS is ${NEW_TAGS[@]}"
            for NEW_TAG in $NEW_TAGS; do
              # Delete any old tags via GitHub API
              curl -s \
              -X DELETE https://api.github.com/repos/${{ github.repository }}/git/refs/tags/$NEW_TAG \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}"
              echo "Deleted old $NEW_TAG tag"

              # Create new tag
              curl -s \
              -X POST https://api.github.com/repos/${{ github.repository }}/git/refs \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -d @- << EOF
              {
                "ref": "refs/tags/$NEW_TAG",
                "sha": "${{ github.sha }}"
              }
          EOF
            done
          fi
